<?php

/**
 * @file
 * The Everyday Tools module was created to house functions that are useful in every Drupal build that requires
 * some degree of development. 
 * The functions in this module are for Taxonomy
 *
 */

/**
 * Returns the raw term name for a given tid
 * @param int $tid
 * @return string
 */
function everyday_tools_get_term_name($tid) {
  if ($tid <> 0) {
    $term = taxonomy_term_load($tid);
    if ($term) {
      return $term->name;
    }
    else {
      return $tid;
    }
  }
  else {
    return '';
  }
}

/**
 * Returns the taxonomy term url for a given tid
 * @param int $tid
 * @return url
 */
function everyday_tools_get_term_url($tid) {
  return '/' . drupal_lookup_path('alias', 'taxonomy/term/' . $tid);
}

/**
 * Returns the taxonomy terms tid
 * @param string $name - taxonomy item
 * @param int $vid - Vocabulary ID
 * return int - ID of the taxonomy term
 */
function everyday_tools_get_tid_from_name($name, $vid) {
  static $data = array();

  if (isset($data[$vid]) && isset($data[$vid][$name])) {
    return $data[$vid][$name];
  }
  else {
    $tid = db_query("SELECT tid FROM {taxonomy_term_data} WHERE vid = :vid AND name = :name", array(':vid' => $vid, ':name' => $name))->fetchField();
    if (!$tid) {
      return FALSE;
    }
    if (!array_key_exists($vid, $data)) {
      $data[$vid] = array();
    }
    $data[$vid][$name] = $tid;
    return $tid;
  }
}

/**
 * function to know if a term exists in a vocab or not.
 * @param
 *   $vocab_machine_name takes vocabulary machine name as parameter in which you want to find a term.
 *   $tid term id which you want to know if exists or not in the given vocab.
 * @return
 *   1 tid exists in the vocab.
 *   0 tid does not exist.
 *  -1 no vocab found with the given machine name
 *   2 vocab has no terms inside.
 */
function everyday_tools_check_term_exists_in_vocab($vocab_machine_name, $tid) {
  $vocab = taxonomy_vocabulary_machine_name_load($vocab_machine_name);
  if (is_object($vocab)) {
    $term_tree = taxonomy_get_tree($vocab->vid);
    if (is_array($term_tree) && !empty($term_tree)) {
      foreach ($term_tree as $key => $value) {
        $vocab_tids[] = $value->tid;
      }
      if (in_array($tid, $vocab_tids)) {
        return 1;
      } else {
        return 0;
      }
    } if (empty($term_tree)) {
      return 2;
    }
  }
  else
    return -1;
}